<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{0346FEE6-2412-4ADF-B4EE-4B3D1B17836E}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\GitHub\mve\3rdparty\include;E:\GitHub\mve\libs;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\GitHub\mve\3rdparty\include;E:\GitHub\mve\libs;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\GitHub\mve\3rdparty\include;E:\GitHub\mve\libs;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\GitHub\mve\3rdparty\include;E:\GitHub\mve\libs;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="CMakeFiles\a671b9deee9aa583e572c94eda2071db\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/GitHub/mve -BE:/GitHub/mve/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:/GitHub/mve/build/CMakeFiles/a671b9deee9aa583e572c94eda2071db/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPack.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPackComponent.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindGLEW.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenMP.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindTIFF.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Templates\CPackConfig.cmake.in;E:\GitHub\mve\CMakeLists.txt;E:\GitHub\mve\apps\CMakeLists.txt;E:\GitHub\mve\apps\bundle2pset\CMakeLists.txt;E:\GitHub\mve\apps\dmrecon\CMakeLists.txt;E:\GitHub\mve\apps\fssrecon\CMakeLists.txt;E:\GitHub\mve\apps\makescene\CMakeLists.txt;E:\GitHub\mve\apps\mesh2pset\CMakeLists.txt;E:\GitHub\mve\apps\meshalign\CMakeLists.txt;E:\GitHub\mve\apps\meshclean\CMakeLists.txt;E:\GitHub\mve\apps\meshconvert\CMakeLists.txt;E:\GitHub\mve\apps\prebundle\CMakeLists.txt;E:\GitHub\mve\apps\scene2pset\CMakeLists.txt;E:\GitHub\mve\apps\sceneupgrade\CMakeLists.txt;E:\GitHub\mve\apps\sfmrecon\CMakeLists.txt;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCXXCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeRCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeSystem.cmake;E:\GitHub\mve\libs\CMakeLists.txt;E:\GitHub\mve\libs\dmrecon\CMakeLists.txt;E:\GitHub\mve\libs\fssr\CMakeLists.txt;E:\GitHub\mve\libs\mve\CMakeLists.txt;E:\GitHub\mve\libs\ogl\CMakeLists.txt;E:\GitHub\mve\libs\sfm\CMakeLists.txt;E:\GitHub\mve\libs\util\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub\mve\build\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\util\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\mve\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\sfm\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\fssr\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\ogl\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\bundle2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\fssrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\makescene\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\mesh2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshalign\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshclean\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshconvert\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\prebundle\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\scene2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sceneupgrade\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sfmrecon\CMakeFiles\generate.stamp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/GitHub/mve -BE:/GitHub/mve/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:/GitHub/mve/build/CMakeFiles/a671b9deee9aa583e572c94eda2071db/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPack.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPackComponent.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindGLEW.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenMP.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindTIFF.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Templates\CPackConfig.cmake.in;E:\GitHub\mve\CMakeLists.txt;E:\GitHub\mve\apps\CMakeLists.txt;E:\GitHub\mve\apps\bundle2pset\CMakeLists.txt;E:\GitHub\mve\apps\dmrecon\CMakeLists.txt;E:\GitHub\mve\apps\fssrecon\CMakeLists.txt;E:\GitHub\mve\apps\makescene\CMakeLists.txt;E:\GitHub\mve\apps\mesh2pset\CMakeLists.txt;E:\GitHub\mve\apps\meshalign\CMakeLists.txt;E:\GitHub\mve\apps\meshclean\CMakeLists.txt;E:\GitHub\mve\apps\meshconvert\CMakeLists.txt;E:\GitHub\mve\apps\prebundle\CMakeLists.txt;E:\GitHub\mve\apps\scene2pset\CMakeLists.txt;E:\GitHub\mve\apps\sceneupgrade\CMakeLists.txt;E:\GitHub\mve\apps\sfmrecon\CMakeLists.txt;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCXXCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeRCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeSystem.cmake;E:\GitHub\mve\libs\CMakeLists.txt;E:\GitHub\mve\libs\dmrecon\CMakeLists.txt;E:\GitHub\mve\libs\fssr\CMakeLists.txt;E:\GitHub\mve\libs\mve\CMakeLists.txt;E:\GitHub\mve\libs\ogl\CMakeLists.txt;E:\GitHub\mve\libs\sfm\CMakeLists.txt;E:\GitHub\mve\libs\util\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub\mve\build\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\util\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\mve\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\sfm\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\fssr\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\ogl\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\bundle2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\fssrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\makescene\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\mesh2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshalign\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshclean\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshconvert\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\prebundle\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\scene2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sceneupgrade\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sfmrecon\CMakeFiles\generate.stamp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/GitHub/mve -BE:/GitHub/mve/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:/GitHub/mve/build/CMakeFiles/a671b9deee9aa583e572c94eda2071db/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPack.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPackComponent.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindGLEW.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenMP.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindTIFF.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Templates\CPackConfig.cmake.in;E:\GitHub\mve\CMakeLists.txt;E:\GitHub\mve\apps\CMakeLists.txt;E:\GitHub\mve\apps\bundle2pset\CMakeLists.txt;E:\GitHub\mve\apps\dmrecon\CMakeLists.txt;E:\GitHub\mve\apps\fssrecon\CMakeLists.txt;E:\GitHub\mve\apps\makescene\CMakeLists.txt;E:\GitHub\mve\apps\mesh2pset\CMakeLists.txt;E:\GitHub\mve\apps\meshalign\CMakeLists.txt;E:\GitHub\mve\apps\meshclean\CMakeLists.txt;E:\GitHub\mve\apps\meshconvert\CMakeLists.txt;E:\GitHub\mve\apps\prebundle\CMakeLists.txt;E:\GitHub\mve\apps\scene2pset\CMakeLists.txt;E:\GitHub\mve\apps\sceneupgrade\CMakeLists.txt;E:\GitHub\mve\apps\sfmrecon\CMakeLists.txt;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCXXCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeRCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeSystem.cmake;E:\GitHub\mve\libs\CMakeLists.txt;E:\GitHub\mve\libs\dmrecon\CMakeLists.txt;E:\GitHub\mve\libs\fssr\CMakeLists.txt;E:\GitHub\mve\libs\mve\CMakeLists.txt;E:\GitHub\mve\libs\ogl\CMakeLists.txt;E:\GitHub\mve\libs\sfm\CMakeLists.txt;E:\GitHub\mve\libs\util\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub\mve\build\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\util\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\mve\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\sfm\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\fssr\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\ogl\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\bundle2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\fssrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\makescene\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\mesh2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshalign\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshclean\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshconvert\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\prebundle\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\scene2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sceneupgrade\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sfmrecon\CMakeFiles\generate.stamp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/GitHub/mve -BE:/GitHub/mve/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:/GitHub/mve/build/CMakeFiles/a671b9deee9aa583e572c94eda2071db/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPack.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CPackComponent.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindGLEW.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindOpenMP.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindTIFF.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Templates\CPackConfig.cmake.in;E:\GitHub\mve\CMakeLists.txt;E:\GitHub\mve\apps\CMakeLists.txt;E:\GitHub\mve\apps\bundle2pset\CMakeLists.txt;E:\GitHub\mve\apps\dmrecon\CMakeLists.txt;E:\GitHub\mve\apps\fssrecon\CMakeLists.txt;E:\GitHub\mve\apps\makescene\CMakeLists.txt;E:\GitHub\mve\apps\mesh2pset\CMakeLists.txt;E:\GitHub\mve\apps\meshalign\CMakeLists.txt;E:\GitHub\mve\apps\meshclean\CMakeLists.txt;E:\GitHub\mve\apps\meshconvert\CMakeLists.txt;E:\GitHub\mve\apps\prebundle\CMakeLists.txt;E:\GitHub\mve\apps\scene2pset\CMakeLists.txt;E:\GitHub\mve\apps\sceneupgrade\CMakeLists.txt;E:\GitHub\mve\apps\sfmrecon\CMakeLists.txt;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeCXXCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeRCCompiler.cmake;E:\GitHub\mve\build\CMakeFiles\3.2.3\CMakeSystem.cmake;E:\GitHub\mve\libs\CMakeLists.txt;E:\GitHub\mve\libs\dmrecon\CMakeLists.txt;E:\GitHub\mve\libs\fssr\CMakeLists.txt;E:\GitHub\mve\libs\mve\CMakeLists.txt;E:\GitHub\mve\libs\ogl\CMakeLists.txt;E:\GitHub\mve\libs\sfm\CMakeLists.txt;E:\GitHub\mve\libs\util\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub\mve\build\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\util\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\mve\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\sfm\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\fssr\CMakeFiles\generate.stamp;E:\GitHub\mve\build\libs\ogl\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\bundle2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\dmrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\fssrecon\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\makescene\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\mesh2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshalign\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshclean\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\meshconvert\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\prebundle\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\scene2pset\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sceneupgrade\CMakeFiles\generate.stamp;E:\GitHub\mve\build\apps\sfmrecon\CMakeFiles\generate.stamp</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>